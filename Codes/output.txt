Start the AES scan chain attack...

Start to analyze the input indices mapping to the scan chain bits...

The input indices dictionary in the scan chain ordered by input bits from LSB to MSB(input reg loc:scan chain loc):
 {0: 152, 1: 209, 2: 17, 3: 78, 4: 205, 5: 34, 6: 28, 7: 68, 8: 143, 9: 161, 10: 46, 11: 136, 12: 163, 13: 30, 14: 196, 15: 192, 16: 251, 17: 106, 18: 93, 19: 224, 20: 222, 21: 245, 22: 181, 23: 7, 24: 56, 25: 108, 26: 159, 27: 142, 28: 148, 29: 61, 30: 10, 31: 13, 32: 157, 33: 176, 34: 45, 35: 47, 36: 151, 37: 223, 38: 75, 39: 203, 40: 198, 41: 206, 42: 214, 43: 177, 44: 123, 45: 112, 46: 132, 47: 221, 48: 127, 49: 167, 50: 31, 51: 88, 52: 59, 53: 14, 54: 166, 55: 249, 56: 178, 57: 65, 58: 51, 59: 207, 60: 125, 61: 225, 62: 137, 63: 189, 64: 60, 65: 252, 66: 139, 67: 12, 68: 109, 69: 19, 70: 216, 71: 86, 72: 82, 73: 91, 74: 215, 75: 244, 76: 23, 77: 15, 78: 100, 79: 41, 80: 150, 81: 72, 82: 240, 83: 165, 84: 219, 85: 55, 86: 195, 87: 39, 88: 57, 89: 42, 90: 141, 91: 89, 92: 58, 93: 193, 94: 50, 95: 113, 96: 90, 97: 49, 98: 84, 99: 130, 100: 229, 101: 24, 102: 4, 103: 138, 104: 200, 105: 144, 106: 250, 107: 16, 108: 191, 109: 180, 110: 246, 111: 253, 112: 155, 113: 164, 114: 29, 115: 0, 116: 182, 117: 231, 118: 149, 119: 95, 120: 27, 121: 254, 122: 115, 123: 232, 124: 104, 125: 92, 126: 8, 127: 158}

The input indices dictionary in the scan chain ordered by scan bits from LSB to MSB(scan chain loc: input reg loc):
 {0: 115, 4: 102, 7: 23, 8: 126, 10: 30, 12: 67, 13: 31, 14: 53, 15: 77, 16: 107, 17: 2, 19: 69, 23: 76, 24: 101, 27: 120, 28: 6, 29: 114, 30: 13, 31: 50, 34: 5, 39: 87, 41: 79, 42: 89, 45: 34, 46: 10, 47: 35, 49: 97, 50: 94, 51: 58, 55: 85, 56: 24, 57: 88, 58: 92, 59: 52, 60: 64, 61: 29, 65: 57, 68: 7, 72: 81, 75: 38, 78: 3, 82: 72, 84: 98, 86: 71, 88: 51, 89: 91, 90: 96, 91: 73, 92: 125, 93: 18, 95: 119, 100: 78, 104: 124, 106: 17, 108: 25, 109: 68, 112: 45, 113: 95, 115: 122, 123: 44, 125: 60, 127: 48, 130: 99, 132: 46, 136: 11, 137: 62, 138: 103, 139: 66, 141: 90, 142: 27, 143: 8, 144: 105, 148: 28, 149: 118, 150: 80, 151: 36, 152: 0, 155: 112, 157: 32, 158: 127, 159: 26, 161: 9, 163: 12, 164: 113, 165: 83, 166: 54, 167: 49, 176: 33, 177: 43, 178: 56, 180: 109, 181: 22, 182: 116, 189: 63, 191: 108, 192: 15, 193: 93, 195: 86, 196: 14, 198: 40, 200: 104, 203: 39, 205: 4, 206: 41, 207: 59, 209: 1, 214: 42, 215: 74, 216: 70, 219: 84, 221: 47, 222: 20, 223: 37, 224: 19, 225: 61, 229: 100, 231: 117, 232: 123, 240: 82, 244: 75, 245: 21, 246: 110, 249: 55, 250: 106, 251: 16, 252: 65, 253: 111, 254: 121}

Start to analyze the byte candidates for RK0 and the main key of the AES algorithm...

Start the loop on all bytes of input and key registers to find the key candidate bytes...

Start to find data register indices in scan chain for byte number 0 ...
Data register indices in scan chain for input byte number 0 :
 [3, 11, 18, 22, 26, 44, 52, 54, 168, 179, 185, 187, 197, 213, 227, 235, 236, 239, 40, 81, 94, 120, 126, 107, 210, 35, 48, 98, 122, 171, 218, 241]
Start to find candidate key bytes for byte number 0 ...
Found candidate key bytes for byte number 0 

Start to find data register indices in scan chain for byte number 1 ...
Data register indices in scan chain for input byte number 1 :
 [33, 66, 69, 73, 111, 128, 131, 186, 64, 85, 134, 162, 175, 194, 228, 248, 37, 53, 87, 217, 2, 21, 32, 43, 80, 145, 174, 226, 20, 77, 79, 208]
Start to find candidate key bytes for byte number 1 ...
Found candidate key bytes for byte number 1 

Start to find data register indices in scan chain for byte number 2 ...
Data register indices in scan chain for input byte number 2 :
 [6, 36, 63, 67, 76, 97, 99, 103, 110, 133, 135, 146, 220, 233, 234, 242, 247, 1, 38, 62, 71, 102, 114, 116, 5, 9, 201, 204, 117, 129, 211, 70]
Start to find candidate key bytes for byte number 2 ...
Found candidate key bytes for byte number 2 

Start to find data register indices in scan chain for byte number 3 ...
Data register indices in scan chain for input byte number 3 :
 [25, 74, 105, 118, 124, 140, 147, 154, 169, 173, 183, 188, 199, 212, 230, 238, 243, 255, 101, 156, 184, 237, 83, 96, 121, 160, 170, 172, 202, 119, 153, 190]
Start to find candidate key bytes for byte number 3 ...
Found candidate key bytes for byte number 3 

Start to find data register indices in scan chain for byte number 4 ...
Data register indices in scan chain for input byte number 4 :
 [74, 96, 119, 153, 156, 170, 172, 190, 199, 230, 237, 83, 101, 118, 121, 124, 140, 147, 154, 188, 202, 212, 238, 243, 105, 169, 184, 255, 25, 160, 173, 183]
Start to find candidate key bytes for byte number 4 ...
Found candidate key bytes for byte number 4 

Start to find data register indices in scan chain for byte number 5 ...
Data register indices in scan chain for input byte number 5 :
 [18, 26, 48, 52, 54, 81, 94, 98, 107, 122, 187, 197, 213, 227, 235, 236, 241, 11, 22, 218, 3, 35, 40, 44, 179, 239, 120, 126, 168, 171, 185, 210]
Start to find candidate key bytes for byte number 5 ...
Found candidate key bytes for byte number 5 

Start to find data register indices in scan chain for byte number 6 ...
Data register indices in scan chain for input byte number 6 :
 [2, 20, 21, 32, 33, 37, 43, 53, 64, 66, 69, 77, 80, 85, 87, 111, 128, 134, 145, 175, 186, 194, 217, 248, 79, 174, 208, 228, 131, 162, 226, 73]
Start to find candidate key bytes for byte number 6 ...
Found candidate key bytes for byte number 6 

Start to find data register indices in scan chain for byte number 7 ...
Data register indices in scan chain for input byte number 7 :
 [1, 5, 9, 36, 38, 63, 67, 71, 97, 102, 110, 116, 117, 135, 201, 211, 220, 234, 242, 247, 6, 62, 70, 76, 103, 146, 204, 233, 114, 99, 129, 133]
Start to find candidate key bytes for byte number 7 ...
Found candidate key bytes for byte number 7 

Start to find data register indices in scan chain for byte number 8 ...
Data register indices in scan chain for input byte number 8 :
 [6, 9, 36, 62, 70, 71, 76, 99, 114, 135, 201, 234, 242, 247, 97, 129, 211, 233, 1, 38, 63, 102, 103, 116, 133, 110, 146, 204, 220, 5, 67, 117]
Start to find candidate key bytes for byte number 8 ...
Found candidate key bytes for byte number 8 

Start to find data register indices in scan chain for byte number 9 ...
Data register indices in scan chain for input byte number 9 :
 [74, 83, 105, 118, 119, 124, 153, 160, 169, 172, 173, 184, 230, 243, 140, 199, 237, 255, 25, 121, 147, 156, 170, 183, 202, 212, 238, 96, 154, 101, 188, 190]
Start to find candidate key bytes for byte number 9 ...
Found candidate key bytes for byte number 9 

Start to find data register indices in scan chain for byte number 10 ...
Data register indices in scan chain for input byte number 10 :
 [3, 26, 35, 40, 48, 54, 168, 179, 187, 241, 11, 18, 22, 52, 81, 98, 120, 122, 126, 171, 197, 213, 227, 239, 44, 185, 218, 235, 107, 210, 236, 94]
Start to find candidate key bytes for byte number 10 ...
Found candidate key bytes for byte number 10 

Start to find data register indices in scan chain for byte number 11 ...
Data register indices in scan chain for input byte number 11 :
 [33, 66, 69, 111, 134, 21, 32, 37, 43, 53, 64, 79, 85, 87, 128, 131, 145, 174, 175, 226, 248, 2, 77, 80, 162, 186, 228, 20, 73, 194, 208, 217]
Start to find candidate key bytes for byte number 11 ...
Found candidate key bytes for byte number 11 

Start to find data register indices in scan chain for byte number 12 ...
Data register indices in scan chain for input byte number 12 :
 [32, 33, 53, 66, 69, 73, 128, 134, 162, 175, 194, 228, 248, 85, 111, 208, 20, 21, 37, 43, 77, 79, 80, 131, 174, 186, 217, 2, 64, 87, 145, 226]
Start to find candidate key bytes for byte number 12 ...
Found candidate key bytes for byte number 12 

Start to find data register indices in scan chain for byte number 13 ...
Data register indices in scan chain for input byte number 13 :
 [36, 63, 67, 70, 97, 103, 116, 129, 146, 204, 211, 5, 9, 62, 76, 110, 117, 135, 234, 247, 6, 38, 99, 114, 133, 201, 220, 233, 102, 1, 71, 242]
Start to find candidate key bytes for byte number 13 ...
Found candidate key bytes for byte number 13 

Start to find data register indices in scan chain for byte number 14 ...
Data register indices in scan chain for input byte number 14 :
 [25, 101, 105, 119, 121, 147, 183, 199, 202, 212, 230, 237, 238, 83, 118, 124, 140, 156, 160, 170, 172, 190, 74, 96, 153, 154, 184, 243, 255, 188, 169, 173]
Start to find candidate key bytes for byte number 14 ...
Found candidate key bytes for byte number 14 

Start to find data register indices in scan chain for byte number 15 ...
Data register indices in scan chain for input byte number 15 :
 [3, 11, 22, 44, 48, 52, 94, 98, 126, 171, 179, 187, 197, 210, 213, 227, 239, 18, 26, 107, 122, 218, 241, 35, 40, 81, 185, 235, 54, 168, 236, 120]
Start to find candidate key bytes for byte number 15 ...
Found candidate key bytes for byte number 15 

Found each byte candidates for RK0 and the main key of the AES algorithm, RK0 byte candidates:
 [[[0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 1]], [[0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1]], [[0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1]], [[0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1]], [[1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1]], [[0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1]], [[0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1]], [[0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1]], [[0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 1]], [[1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1]], [[0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1]], [[1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1]], [[1, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 1, 1]], [[1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1]], [[0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1]], [[0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1]]]

Start the brute force search on the all key combinations...

ciphertext:  8FB7F1B3BA4C3921D702D56BDF6D07A8
Found the final Key:  3f3a1d1aac7e04351e8233e98ffe034b
